C51 COMPILER V9.00   OV7670                                                                09/22/2012 11:56:53 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OV7670
OBJECT MODULE PLACED IN .\obj\OV7670.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\OV7670.c BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND PRINT(.\obj\OV7670.
                    -lst) OBJECT(.\obj\OV7670.obj)

line level    source

   1          /*******************************************************************************
   2          *  Copyright (C) 2010 - All Rights Reserved             
   3          * »Ìº˛◊˜’ﬂ:     ∆Ô∑…º“◊Â
   4          * ∞Ê»®À˘”–: ∆Ô∑…µÁ◊”    
   5          * ¥¥Ω®»’∆⁄:     2010ƒÍ6‘¬10»’ 
   6          * »Ìº˛¿˙ ∑:     2011ƒÍ2‘¬10»’–ﬁ∏ƒ
   7                      2012ƒÍ9‘¬20»’‘Ÿ–ﬁ∏ƒ
   8          * Version:  3.5 
   9          * Demo Ã‘±¶µÿ÷∑£∫http://qifeidz.taobao.com/
  10          **********************************************************************************************************
             -************************************
  11          ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
             -¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
  12          ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿ß“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
             -¿¡¿¡¿¡¿¡“ª“ª“ª“ª“ª“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡
  13          ¿¡¿¡¿ß“ª“ª“ª“ª¿¡“ª“ª“ª“ª“ª“ª∂˛¿¡¿¡¿¡¿¡¿ß“ª“ª“ª“ª“ª“ª“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡ÀƒÖñ¿¡¿¡“ª“ª¿¡¿¡¿¡“ª¿¡¿¡¿¡¿¡¿¡¿¡
             -¿¡¿¡¿¡“ª“ª“ª“ªÀƒÀƒ“ª“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡
  14          ¿¡¿¡¿¡¿¡¿¡¿¡“ª¿¡¿¡¿¡“ª∂˛“ª¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª“ª“ªÀƒÖñ∂˛“ªÀƒ¿¡“ª“ª¿¡¿¡¿¡¿¡¿¡Àƒ“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª¿¡¿¡¿¡¿¡¿¡
             -¿¡¿¡¿¡Àƒ¿¡¿¡Àƒ“ª“ª“ª“ªÖñ¿¡¿¡¿¡¿¡¿¡¿¡
  15          ¿¡¿¡¿¡ÀƒÖñÖñ“ª¿¡¿¡Öñ¿¡¿¡¿¡Àƒ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿ß“ª¿¡“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ªÖñÖñ“ª“ªÖñÖñÖñ“ª“ª¿¡¿¡¿¡¿¡¿¡
             -¿¡ÖñÖñÖñÖñÖñÖñ“ª“ªÖñÖñÖñ¿¡¿¡¿¡¿¡¿¡¿¡
  16          ¿¡¿¡¿¡“ª¿¡∂˛“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡∂˛“ª“ª¿ß¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª“ª“ª“ª“ª“ª“ª“ª“ªÀƒ¿¡¿¡¿¡¿¡¿¡
             -“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª“ª¿¡¿¡¿¡
  17          ¿¡¿¡¿¡“ª“ª“ª“ª“ªÖñ∂˛“ª“ªÖñ“ª¿¡Öñ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª“ª“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª¿¡¿¡“ª“ª¿¡¿¡¿¡“ª¿ß¿¡¿¡¿¡¿¡¿¡
             -“ª“ªÀƒ¿¡¿¡¿¡¿¡“ª“ª¿¡¿¡¿ß“ª“ªÀƒ¿¡¿¡¿¡
  18          ¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª¿ß“ª¿¡“ªÖñ“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿ß“ª¿¡¿¡“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª“ª“ª“ª“ª“ª“ª“ª“ªÖñ¿¡¿¡¿¡¿¡¿¡
             -¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ªÖñ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
  19          ¿¡∂˛“ª“ª“ª¿¡Àƒ¿ßÖñ“ª“ª“ªÖñ“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡Àƒ“ªÖñ¿¡¿¡¿¡¿¡¿¡¿¡“ª¿¡¿¡
             -¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ªÖñ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
  20          ¿¡¿¡¿¡¿¡¿¡¿¡“ª¿¡¿¡¿¡¿¡¿¡“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡Öñ“ª“ª“ª“ª“ª“ª¿ß¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª“ª“ª“ª“ª“ª“ª“ª¿¡¿¡
             -¿¡¿¡¿¡¿ß¿¡¿¡Öñ“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
  21          ¿¡¿¡¿¡¿¡“ª“ª“ª¿¡¿¡¿ß“ª“ª“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª“ª“ª“ª¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡“ª“ª“ª“ª“ª“ª“ª¿¡¿¡¿¡
             -¿¡¿¡¿¡¿¡“ª“ª“ª“ªÀƒ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
  22          ¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
             -¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡¿¡
  23          **********************************************************************************************************
             -************************************/
  24          #include<I2C.h>
  25          #include<delay.h>
  26          
  27          unsigned char WrCmos7670(unsigned char regID, unsigned char regDat)
  28          {
  29   1              StartI2C0();
  30   1              if(0==I2CWrite0(0x42))
  31   1              {
  32   2                      StopI2C0();
  33   2                      return(0);
  34   2              }
  35   1              delay_us(100);
  36   1              if(0==I2CWrite0(regID))
  37   1              {
  38   2                      StopI2C0();
  39   2                      return(0);
  40   2              }
C51 COMPILER V9.00   OV7670                                                                09/22/2012 11:56:53 PAGE 2   

  41   1              delay_us(100);
  42   1              if(0==I2CWrite0(regDat))
  43   1              {
  44   2                      StopI2C0();
  45   2                      return(0);
  46   2              }
  47   1              StopI2C0();
  48   1              
  49   1              return(1);
  50   1      }
  51          
  52          
  53          void set_Cmos7670reg(void)
  54          {
  55   1      
  56   1              WrCmos7670(0x3a, 0x04);
  57   1              WrCmos7670(0x40, 0xd0);
  58   1              WrCmos7670(0x12, 0x14);
  59   1              WrCmos7670(0x32, 0x80);
  60   1              WrCmos7670(0x17, 0x16);
  61   1              WrCmos7670(0x18, 0x04);
  62   1              WrCmos7670(0x19, 0x02);
  63   1              WrCmos7670(0x1a, 0x7b);
  64   1              WrCmos7670(0x03, 0x06);
  65   1              WrCmos7670(0x0c, 0x00);
  66   1              WrCmos7670(0x3e, 0x00);
  67   1              WrCmos7670(0x70, 0x3a);
  68   1              WrCmos7670(0x71, 0x35);
  69   1              WrCmos7670(0x72, 0x11);
  70   1              WrCmos7670(0x73, 0x00);
  71   1              WrCmos7670(0xa2, 0x02);
  72   1              WrCmos7670(0x11, 0x87);
  73   1              
  74   1              WrCmos7670(0x7a, 0x20);
  75   1              WrCmos7670(0x7b, 0x1c);
  76   1              WrCmos7670(0x7c, 0x28);
  77   1              WrCmos7670(0x7d, 0x3c);
  78   1              WrCmos7670(0x7e, 0x55);
  79   1              WrCmos7670(0x7f, 0x68);
  80   1              WrCmos7670(0x80, 0x76);
  81   1              WrCmos7670(0x81, 0x80);
  82   1              WrCmos7670(0x82, 0x88);
  83   1              WrCmos7670(0x83, 0x8f);
  84   1              WrCmos7670(0x84, 0x96);
  85   1              WrCmos7670(0x85, 0xa3);
  86   1              WrCmos7670(0x86, 0xaf);
  87   1              WrCmos7670(0x87, 0xc4);
  88   1              WrCmos7670(0x88, 0xd7);
  89   1              WrCmos7670(0x89, 0xe8);
  90   1              
  91   1              WrCmos7670(0x13, 0xe0);
  92   1              WrCmos7670(0x00, 0x00);
  93   1              
  94   1              WrCmos7670(0x10, 0xFf);
  95   1              WrCmos7670(0x0d, 0x00);
  96   1              WrCmos7670(0x14, 0x29);
  97   1              WrCmos7670(0xa5, 0x05);
  98   1              WrCmos7670(0xab, 0x07);
  99   1              WrCmos7670(0x24, 0x75);
 100   1              WrCmos7670(0x25, 0x63);
 101   1              WrCmos7670(0x26, 0xA5);
 102   1              WrCmos7670(0x9f, 0x78);
C51 COMPILER V9.00   OV7670                                                                09/22/2012 11:56:53 PAGE 3   

 103   1              WrCmos7670(0xa0, 0x68);
 104   1              WrCmos7670(0xa1, 0x03);
 105   1              WrCmos7670(0xa6, 0xdf);
 106   1              WrCmos7670(0xa7, 0xdf);
 107   1              WrCmos7670(0xa8, 0xf0);
 108   1              WrCmos7670(0xa9, 0x90);
 109   1              WrCmos7670(0xaa, 0x94);
 110   1              //WrCmos7670(0x13, 0xe5);
 111   1      
 112   1              WrCmos7670(0x0e, 0x61);
 113   1              WrCmos7670(0x0f, 0x4b);
 114   1              WrCmos7670(0x16, 0x02);
 115   1              WrCmos7670(0x1e, 0x37);
 116   1              WrCmos7670(0x21, 0x02);
 117   1              WrCmos7670(0x22, 0x91);
 118   1              WrCmos7670(0x29, 0x07);
 119   1              WrCmos7670(0x33, 0x0b);
 120   1              WrCmos7670(0x35, 0x0b);
 121   1              WrCmos7670(0x37, 0x1d);
 122   1              WrCmos7670(0x38, 0x71);
 123   1              WrCmos7670(0x39, 0x2a);
 124   1              WrCmos7670(0x3c, 0x78);
 125   1              WrCmos7670(0x4d, 0x40);
 126   1              WrCmos7670(0x4e, 0x20);
 127   1              WrCmos7670(0x69, 0x00);
 128   1              WrCmos7670(0x6b, 0x60);
 129   1              WrCmos7670(0x74, 0x19);
 130   1              WrCmos7670(0x8d, 0x4f);
 131   1              WrCmos7670(0x8e, 0x00);
 132   1              WrCmos7670(0x8f, 0x00);
 133   1              WrCmos7670(0x90, 0x00);
 134   1              WrCmos7670(0x91, 0x00);
 135   1              WrCmos7670(0x92, 0x00);
 136   1              WrCmos7670(0x96, 0x00);
 137   1              WrCmos7670(0x9a, 0x80);
 138   1              WrCmos7670(0xb0, 0x84);
 139   1              WrCmos7670(0xb1, 0x0c);
 140   1              WrCmos7670(0xb2, 0x0e);
 141   1              WrCmos7670(0xb3, 0x82);
 142   1              WrCmos7670(0xb8, 0x0a);
 143   1      
 144   1      
 145   1      
 146   1              WrCmos7670(0x43, 0x14);
 147   1              WrCmos7670(0x44, 0xf0);
 148   1              WrCmos7670(0x45, 0x34);
 149   1              WrCmos7670(0x46, 0x58);
 150   1              WrCmos7670(0x47, 0x28);
 151   1              WrCmos7670(0x48, 0x3a);
 152   1              WrCmos7670(0x59, 0x88);
 153   1              WrCmos7670(0x5a, 0x88);
 154   1              WrCmos7670(0x5b, 0x44);
 155   1              WrCmos7670(0x5c, 0x67);
 156   1              WrCmos7670(0x5d, 0x49);
 157   1              WrCmos7670(0x5e, 0x0e);
 158   1              WrCmos7670(0x64, 0x04);
 159   1              WrCmos7670(0x65, 0x20);
 160   1              WrCmos7670(0x66, 0x05);
 161   1              WrCmos7670(0x94, 0x04);
 162   1              WrCmos7670(0x95, 0x08);
 163   1              WrCmos7670(0x6c, 0x0a);
 164   1              WrCmos7670(0x6d, 0x55);
C51 COMPILER V9.00   OV7670                                                                09/22/2012 11:56:53 PAGE 4   

 165   1              WrCmos7670(0x6e, 0x11);
 166   1              WrCmos7670(0x6f, 0x9f);
 167   1              WrCmos7670(0x6a, 0x40);
 168   1              WrCmos7670(0x01, 0x40);
 169   1              WrCmos7670(0x02, 0x40);
 170   1              WrCmos7670(0x13, 0xe6);
 171   1              WrCmos7670(0x15, 0x00);  
 172   1              
 173   1              
 174   1              WrCmos7670(0x4f, 0x80);
 175   1              WrCmos7670(0x50, 0x80);
 176   1              WrCmos7670(0x51, 0x00);
 177   1              WrCmos7670(0x52, 0x22);
 178   1              WrCmos7670(0x53, 0x5e);
 179   1              WrCmos7670(0x54, 0x80);
 180   1              WrCmos7670(0x58, 0x9e);
 181   1              
 182   1              WrCmos7670(0x41, 0x18);
 183   1              WrCmos7670(0x3f, 0x00);
 184   1              WrCmos7670(0x75, 0x0F);
 185   1              WrCmos7670(0x76, 0xeF);
 186   1              WrCmos7670(0x4c, 0x00);
 187   1              WrCmos7670(0x77, 0x01);
 188   1              WrCmos7670(0x3d, 0xc2); 
 189   1              WrCmos7670(0x4b, 0x09);
 190   1              WrCmos7670(0xc9, 0x60);
 191   1              WrCmos7670(0x41, 0x38);
 192   1              WrCmos7670(0x56, 0x40);
 193   1              
 194   1              WrCmos7670(0x34, 0x11);
 195   1              WrCmos7670(0x3b, 0x02); 
 196   1                                                                      
 197   1              WrCmos7670(0xa4, 0x89);
 198   1              WrCmos7670(0x96, 0x00);
 199   1              WrCmos7670(0x97, 0x30);
 200   1              WrCmos7670(0x98, 0x20);
 201   1              WrCmos7670(0x99, 0x30);
 202   1              WrCmos7670(0x9a, 0x84);
 203   1              WrCmos7670(0x9b, 0x29);
 204   1              WrCmos7670(0x9c, 0x03);
 205   1              WrCmos7670(0x9d, 0x4c);
 206   1              WrCmos7670(0x9e, 0x3f);
 207   1              WrCmos7670(0x78, 0x04); 
 208   1              
 209   1      }
 210          
 211          
 212          unsigned char Cmos7670_init(void)
 213          {
 214   1              unsigned char mmm;      
 215   1              unsigned int i=0;
 216   1              
 217   1              InitI2C0();
 218   1      
 219   1              mmm=0x80;
 220   1              if(0==WrCmos7670(0x12, mmm)) 
 221   1              {
 222   2                      return 0 ;
 223   2              }
 224   1              delay_ms(10);
 225   1      
 226   1              set_Cmos7670reg();
C51 COMPILER V9.00   OV7670                                                                09/22/2012 11:56:53 PAGE 5   

 227   1      
 228   1              return 1; 
 229   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1066    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
