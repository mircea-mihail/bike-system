Sistem de calcul pentru bicicleta
	Proiectul este impartit in 3 parti principale:
		* ciclocomputerul, care arata in timp real informatii precum viteza si distanta pe ecranul de pe dispozitiv
		* analiza de date, care implica analiza informatiilor de calatorie si reprezentarea lor pe un calculator separat
		* identificarea de semne de circulatie cruciale si analizarea comportamentului biciclistului la intalnirea lor

Ciclocomputerul:
	Este format din:
		* Dispozitiv portabil pe ghidon
			- esp 32 wroom 
			- E-paper display alb-negru 200x200 Px pentru consum redus si claritate in conditii foarte luminoase (soare)
			- micro SD (pentru stocat datele extrase de la senzor)
			- butoane (pentru navigat meniul)
			- carcasa modelata 3D
			- placa perforata pe care sunt montate componentele

		* Elemente extene 
			- sensor hall (montat pe furca bicicletei)
			- un singur magnet montat pe roata pentu identificarea duratei unei rotatii complete
			- baterie externa montata pe cadru 
			- carcase modelate 3D pentru baterie si senzor
			- cabluri (usb C si unul cu un conector cu 3 pini pentru senzor)

	Caracteristici si functionalitati:
		* scris in C++
		* citeste si interpreteaza datele de la senzorul hall 
		* calculeaza metrici cheie precum
			- viteza
			- viteza medie
			- distanta parcursa 
			- durata totala a calatoriei.
		* afiseaza datele calculate cu ajutorul butoanelor si al unui meniu rudimentar
		* stocheaza pe un micro SD momentul tuturor semnalelor de la senzor

	Ce e ramas de implementat:
		* rafinari de comportament ale meniului 
		* butoane mai placute 
		* inclus o baterie in carcasa pentru a face mai facila utilizarea
		* capacul de la carcasa se desprinde cand scap proiectul pe jos

Analiza de date
	Caracteristici si functionalitati:
		* scris in python, intr-un jupyter notebook 
		* organizeaza datele de pe micro SD si le stocheaza in ~/.bike-system
		* fiecare fisier din director reprezinta un trip
		* analizeaza date asupra tripurilor noi identificate cat si asupra tuturor tripurilor inregistrate
		* ploteaza grafice care expun diferite tendinte ale utilizatorului (km parcursi la diferite viteze, numar de stopuri, etc)

	Ce e ramas de implementat:
		* denumeste tripurile folosind data citirii lor (2024-11-21-1 ar fi primul trip identificat in ziua respectiva) 
		* ofera analiza si asupra unei perioade intermediare de timp (ultima saptamana? ultima luna?)
		* clasificarea tripurilor comune dupa anumite caracteristici (knn? dbscan? nu am suficiente tripuri inregistrate inca) 
		* as putea face partea aceasta intr-o aplicatie pe telefon si transmiterea de date prin bluetooth dar este de prioritate foarte mica momentan)

Detectia de semne
	Momentan componenta aceasta este intr-o stare intermediara. Algoritmul de detectie a semnelor este scris in python pentru implementare rapida.

	Formata din:
		* ESP-32-CAM Ai-Thinker
		* micro SD (TEMPORAR, stocat de poze pentru testarea algoritmului)
		* carcasa care se imbina cu componenta de ciclocomputer

	Caracteristici si functionalitati:
		* Partea scrisa in python:
			- poate detecta semne de cedeaza in worst case O(2N):
				> din poze facute cu telefonul
				> din poze facute cu telefonul downscale-uite la rezolutia camerei de pe controller
				> din unele poze facute de pe ESP. Inca experimentez cu detectia de culoare, exposure pe camera si alte diferite setari puse la dispozitie de API-ul camerei
		* Codul de C++ de pe MCU:
			- face mai multe poze on startup cu diferite setari ale camerei pentru gasirea unui setup optim
			- aprinde un LED cand vede culoarea rosie (valideaza functionarea unui algoritm de identificare a ceva in poza facuta)
		* pozele sunt stocate in format RGB565 

	Ce e ramas de implementat:
		* gasiea unor parametrii optimi pentru camera si pentru detectia de culoare din poze pentru fuctionare optima pe timp de zi, seara si noapte 
		* traducerea algoritmului din python in c++ (in mare parte este scris c-like deci este destul de realizabil)
		* extinderea algoritmului pentru a include si alte semne cheie precum STOP, interzis biciclete si trecere de pietoni
		* avertizarea biciclistului asupra semnelor respective cat si analiza reactiilor sale in urma intalnirii lor
		* transmiterea catre ciclocomputer a faptului ca a fost gasit un semn, ce fel de semn si cu ce siguranta semnul respectiv a fost identificat
		* modelarea carcasei si gasirea unei orientari optime ale camerei
